import {
  Box,
  Button,
  Checkbox,
  FormControlLabel,
  makeStyles,
  TextField,
  Typography,
} from "@material-ui/core";
import { Field, Form, Formik } from "formik";
import Head from "next/head";
import React from "react";
import Link from "next/link";
import { useState } from "react";
import axios from "axios";

interface userTypes {
  email: string;
  username: string;
  password: string;
  password2?: string;
}

const Register = () => {
  const classes = useStyles();

  const [agreement, setAgreement] = useState<boolean>(false);
  const [errors, setErrors] = useState<string[]>([]);

  const handleSubmit = async (_data: userTypes) => {
    if (_data.password !== _data.password2) {
      setErrors([...errors, "Password do not match"]);
      return;
    }

    const payload = {
      email: _data.email,
      username: _data.username,
      password: _data.password,
    };

    try {
      const res = await axios.post("/api/auth/register", payload);

      console.log(res.data);
    } catch (e) {
      console.error(e);
      setErrors([...errors, e.response.data]);
    }
  };

  return (
    <div className={classes.root}>
      <Head>
        <title>Register</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box className={classes.imageContainer} />

      <Box className={classes.signUpContainer}>
        <Typography variant="h6">Sign up</Typography>
        <Typography variant="body2">
          By continuing, you agree to our User Agreement and Privacy Policy.
        </Typography>
        <FormControlLabel
          control={
            <Checkbox
              checked={agreement}
              onChange={() => setAgreement((prev) => !prev)}
            />
          }
          label={
            <Typography variant="caption">
              I agree to get emails about cool stuff on Leddit
            </Typography>
          }
        />

        <Formik
          initialValues={{
            email: "",
            username: "",
            password: "",
            password2: "",
          }}
          onSubmit={(data) => handleSubmit(data)}
        >
          {() => (
            <Box component={Form} className={classes.formContainer}>
              <Field
                as={TextField}
                type="email"
                variant="outlined"
                label="Email"
                name="email"
                size="small"
              />

              <Field
                as={TextField}
                type="input"
                variant="outlined"
                label="username"
                name="username"
                size="small"
              />

              <Field
                as={TextField}
                type="password"
                variant="outlined"
                label="password"
                name="password"
                size="small"
              />

              <Field
                as={TextField}
                type="password"
                variant="outlined"
                label="re-type password"
                name="password2"
                size="small"
              />

              <Button type="submit" color="primary" variant="contained">
                sign up
              </Button>

              <Box
                style={{
                  display: "flex",
                  alignItems: "center",
                }}
              >
                <Typography variant="body2">Already a ledditor?</Typography>
                <Link href="/login">
                  <a className={classes.loginLink}>log in</a>
                </Link>
              </Box>
            </Box>
          )}
        </Formik>
      </Box>
    </div>
  );
};

const useStyles = makeStyles((_) => ({
  root: {
    display: "flex",
  },
  imageContainer: {
    width: "20%",
    height: "100vh",
    backgroundImage: "url('/images/bricks.jpg') ",
  },
  signUpContainer: {
    height: "70vh",
    width: "23rem",
    margin: "auto 0",
    display: "flex",
    flexDirection: "column",
    justifyContent: "space-evenly",
    padding: "1rem",
  },
  formContainer: {
    display: "flex",
    flexDirection: "column",
    justifyContent: "space-evenly",
    height: "60%",
  },
  loginLink: {
    margin: "0.2rem",
  },
}));

export default Register;
